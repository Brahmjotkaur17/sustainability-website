//Extracting values from index.js
const result = localStorage.getItem('result');
const resultElement = document.getElementById('result'); // Change 'result' to the ID of the desired element
const numstudents = localStorage.getItem("numstudents");
const studentElement=document.getElementById("numstudents");
const difference = localStorage.getItem("difference");
const diffElement= document.getElementById("difference");
const emperpass=localStorage.getItem("emperpass");
const emperpassElement=document.getElementById("emperpass");
const numTrees=localStorage.getItem("numTrees");
const numTreesElement=document.getElementById("numTrees");
const emmcompare=document.getElementById("emmcompare");
//Compare and add elements in report.html file
 if(result<=4000){
    resultElement.innerHTML = `Good Progress! The annual carbon footprint by air travel of the Institution is <b>${result} tonnes</b> of CO2 which is <b>${difference}% less</b> than the previous year.`;
  } else{
    resultElement.innerHTML = `The annual carbon footprint by air travel of the Institution is <b>${result} tonnes</b> of CO2 which is <b>${difference}% more</b> than the previous year.`;
  }
studentElement.innerHTML=`The number of international students travelling are <b>${numstudents}</b>.`;
emperpassElement.innerHTML=`Your air travel emission per international student is <b>${emperpass} tonnes/student</b>. The following chart compares the emission per international student for previous year data of TCD and UCD. `;
numTreesElement.innerHTML=`Trees can absorb a significant amount of carbon from the atmosphere. <b>${numTrees} trees</b> can be planted to offset your carbon emission i.e. <b>${result} tonnes</b>.`;
if(emperpass>0.7){
  emmcompare.innerHTML=`Distance plays a significant role in carbon generation.The average carbon fooprint generated per international student i.e. <b>${emperpass}</b> is more than that of UCD and TCD. To reduce this value, you could admit more international students from the European or near countries. This would compensate the carbon emission generated by students travelling from far away countries.`;
}else{

}

var newEmission;
var slider = document.getElementById("slider");
var sliderValue = document.getElementById("slider-value");

slider.oninput = function() {
  sliderValue.innerHTML = this.value ;
  newEmission=((this.value/100)+1)*(result);
  newEmission =newEmission.toFixed(2);
  if(newEmission>0){
    sliderValue.innerHTML=`Percentage of students added/subtracted=<b>${this.value} % </b><br>        Emissions :<b>${newEmission} tonnes CO2<b>`;
  }
}


const chart= d3.select('#chart');
chart.selectAll('*').remove();
// Set up chart dimensions
const margin = { top: 20, right: 20, bottom: 30, left: 40 };
const width = 500 - margin.left - margin.right;
const height = 300 - margin.top - margin.bottom;
// Create x and y scales
const xScale = d3.scaleBand().range([0, width]).padding(0.1);
const yScale = d3.scaleLinear().range([height, 0]);
// Create x and y axis
const xAxis = d3.axisBottom(xScale);
const yAxis = d3.axisLeft(yScale);
// Add SVG element to the page
const svg = chart.append('svg')
  .attr('width', width + margin.left + margin.right)
  .attr('height', height + margin.top + margin.bottom)
  .append('g')
  .attr('transform', `translate(${margin.left},${margin.top})`);
// Parse the data and set the domains 
const data = [
 { name: 'Your Emissions', value: result },
 { name: 'TCD 2022', value:3699 },
 { name: 'UCD', value: 6500 }
];
xScale.domain(data.map(d => d.name));
yScale.domain([0, d3.max(data, d => d.value)]);
svg.selectAll('.bar')
  .data(data)
  .enter()
  .append('rect')
  .attr('class', 'bar')
  .attr('x', d => xScale(d.name))
  .attr('y', d => yScale(d.value))
  .attr('width', xScale.bandwidth())
  .attr('height', d => height - yScale(d.value))
  .attr("fill","#16a085");
svg.append('g')
  .attr('class', 'x-axis')
  .attr('transform', `translate(0,${height})`)
  .call(xAxis);
svg.append('g')
  .attr('class', 'y-axis')
.call(d3.axisLeft(yScale).ticks(5))
.append('text')
.attr('transform', 'rotate(-90)')
.attr('y', 6)
.attr('dy', '0.71em')
.attr('text-anchor', 'end')
.text('CO2e (kg)');



const chart_perstu= d3.select('#chart_perstu');
chart_perstu.selectAll('*').remove();
// Set up chart dimensions
const margin_perstu = { top: 20, right: 20, bottom: 30, left: 40 };
const width_perstu = 500 - margin_perstu.left - margin_perstu.right;
const height_perstu = 300 - margin_perstu.top - margin_perstu.bottom;
// Create x and y scales
const xScale_perstu = d3.scaleBand().range([0, width_perstu]).padding(0.1);
const yScale_perstu = d3.scaleLinear().range([height_perstu, 0]);
// Create x and y axis
const xAxis_perstu = d3.axisBottom(xScale_perstu);
const yAxis_perstu = d3.axisLeft(yScale_perstu);
// Add SVG element to the page
const svg_perstu = chart_perstu.append('svg')
  .attr('width', width_perstu + margin_perstu.left + margin_perstu.right)
  .attr('height', height_perstu + margin_perstu.top + margin_perstu.bottom)
  .append('g')
  .attr('transform', `translate(${margin_perstu.left},${margin_perstu.top})`);
const data_perstu = [
  { name: 'Your Emissions per student', value: emperpass },
  { name: 'TCD 2022', value:0.612 },
  { name: 'UCD', value: 0.7 }
];
xScale_perstu.domain(data_perstu.map(d => d.name));
yScale_perstu.domain([0, d3.max(data_perstu, d => d.value)]);
svg_perstu.selectAll('.bar')
  .data(data_perstu)
  .enter()
  .append('rect')
  .attr('class', 'bar')
  .attr('x', d => xScale_perstu(d.name))
  .attr('y', d => yScale_perstu(d.value))
  .attr('width', xScale_perstu.bandwidth())
  .attr('height', d => height_perstu - yScale_perstu(d.value))
  .attr("fill","#16a085");
svg_perstu.append('g')
.attr('class', 'x-axis')
.attr('transform', `translate(0,${height_perstu})`)
.call(xAxis_perstu);
svg_perstu.append('g')
  .attr('class', 'y-axis')
  .call(d3.axisLeft(yScale_perstu).ticks(5))
  .append('text')
  .attr('transform', 'rotate(-90)')
  .attr('y', 6)
  .attr('dy', '0.71em')
  .attr('text-anchor', 'end')
  .text('CO2e (kg)');
